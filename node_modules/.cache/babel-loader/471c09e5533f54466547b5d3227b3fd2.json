{"ast":null,"code":"var _jsxFileName = \"/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/pages/Note/Note.jsx\",\n    _s = $RefreshSig$();\n\nimport { NoteForm } from \"components/NoteForm/NoteForm\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Note(props) {\n  _s();\n\n  const [isEditable, setIsEditable] = useState();\n  const {\n    noteId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const note = useSelector(store => store.NOTE.noteList.find(note => note.id === noteId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: note && /*#__PURE__*/_jsxDEV(NoteForm, {\n      isEditable: false,\n      title: note.title,\n      note: note,\n      onClickEdit: () => {},\n      onClickTrash: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Note, \"kUw6CKB2VJ1NdozVtWc8B6HwAa0=\", false, function () {\n  return [useParams, useSearchParams, useSelector];\n});\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["NoteForm","useState","useSelector","useParams","useSearchParams","Note","props","isEditable","setIsEditable","noteId","searchParams","note","store","NOTE","noteList","find","id","title"],"sources":["/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/pages/Note/Note.jsx"],"sourcesContent":["import { NoteForm } from \"components/NoteForm/NoteForm\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\n\nexport function Note(props) {\n  const [isEditable, setIsEditable] = useState();\n  const { noteId } = useParams();\n  const [searchParams] = useSearchParams();\n  const note = useSelector((store) =>\n    store.NOTE.noteList.find((note) => note.id === noteId)\n  );\n\n  return (\n    <>\n      {note && (\n        <NoteForm\n          isEditable={false}\n          title={note.title}\n          note={note}\n          onClickEdit={() => {}}\n          onClickTrash={() => {}}\n        />\n      )}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,8BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,kBAA3C;;;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAC1B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;EACA,MAAM;IAAEQ;EAAF,IAAaN,SAAS,EAA5B;EACA,MAAM,CAACO,YAAD,IAAiBN,eAAe,EAAtC;EACA,MAAMO,IAAI,GAAGT,WAAW,CAAEU,KAAD,IACvBA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,IAApB,CAA0BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYP,MAA/C,CADsB,CAAxB;EAIA,oBACE;IAAA,UACGE,IAAI,iBACH,QAAC,QAAD;MACE,UAAU,EAAE,KADd;MAEE,KAAK,EAAEA,IAAI,CAACM,KAFd;MAGE,IAAI,EAAEN,IAHR;MAIE,WAAW,EAAE,MAAM,CAAE,CAJvB;MAKE,YAAY,EAAE,MAAM,CAAE;IALxB;MAAA;MAAA;MAAA;IAAA;EAFJ,iBADF;AAaD;;GArBeN,I;UAEKF,S,EACIC,e,EACVF,W;;;KAJCG,I"},"metadata":{},"sourceType":"module"}