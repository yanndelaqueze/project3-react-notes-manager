{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const noteSlice = createSlice({\n  name: \"noteSlice\",\n  initialState: {\n    noteList: []\n  },\n  reducers: {\n    setNoteList: (currentSlice, action) => {\n      currentSlice.noteList = action.payload;\n    },\n    addNote: (currentSlice, action) => {\n      currentSlice.noteList.push(action.payload);\n    },\n    updateNote: (currentSlice, action) => {\n      const indexToUpdate = currentSlice.noteList.findIndex(note => note.id === action.payload.id);\n      currentSlice.noteList[indexToUpdate] = action.payload;\n    },\n    deleteNote: (currentSlice, action) => {\n      const filteredNoteList = currentSlice.noteList.filter(note => note.id !== action.payload.id);\n      currentSlice.noteList = filteredNoteList;\n    }\n  }\n});\nexport const noteReducer = noteSlice.reducer;\nexport const {\n  setNoteList,\n  addNote,\n  updateNote,\n  deleteNote\n} = noteSlice.actions;","map":{"version":3,"names":["createSlice","noteSlice","name","initialState","noteList","reducers","setNoteList","currentSlice","action","payload","addNote","push","updateNote","indexToUpdate","findIndex","note","id","deleteNote","filteredNoteList","filter","noteReducer","reducer","actions"],"sources":["/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/store/note/note-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const noteSlice = createSlice({\n  name: \"noteSlice\",\n  initialState: {\n    noteList: [],\n  },\n  reducers: {\n    setNoteList: (currentSlice, action) => {\n      currentSlice.noteList = action.payload;\n    },\n    addNote: (currentSlice, action) => {\n      currentSlice.noteList.push(action.payload);\n    },\n    updateNote: (currentSlice, action) => {\n      const indexToUpdate = currentSlice.noteList.findIndex(\n        (note) => note.id === action.payload.id\n      );\n      currentSlice.noteList[indexToUpdate] = action.payload;\n    },\n    deleteNote: (currentSlice, action) => {\n      const filteredNoteList = currentSlice.noteList.filter(\n        (note) => note.id !== action.payload.id\n      );\n      currentSlice.noteList = filteredNoteList;\n    },\n  },\n});\n\nexport const noteReducer = noteSlice.reducer;\nexport const { setNoteList, addNote, updateNote, deleteNote } =\n  noteSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,WAD6B;EAEnCC,YAAY,EAAE;IACZC,QAAQ,EAAE;EADE,CAFqB;EAKnCC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,YAAD,EAAeC,MAAf,KAA0B;MACrCD,YAAY,CAACH,QAAb,GAAwBI,MAAM,CAACC,OAA/B;IACD,CAHO;IAIRC,OAAO,EAAE,CAACH,YAAD,EAAeC,MAAf,KAA0B;MACjCD,YAAY,CAACH,QAAb,CAAsBO,IAAtB,CAA2BH,MAAM,CAACC,OAAlC;IACD,CANO;IAORG,UAAU,EAAE,CAACL,YAAD,EAAeC,MAAf,KAA0B;MACpC,MAAMK,aAAa,GAAGN,YAAY,CAACH,QAAb,CAAsBU,SAAtB,CACnBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACC,OAAP,CAAeO,EADjB,CAAtB;MAGAT,YAAY,CAACH,QAAb,CAAsBS,aAAtB,IAAuCL,MAAM,CAACC,OAA9C;IACD,CAZO;IAaRQ,UAAU,EAAE,CAACV,YAAD,EAAeC,MAAf,KAA0B;MACpC,MAAMU,gBAAgB,GAAGX,YAAY,CAACH,QAAb,CAAsBe,MAAtB,CACtBJ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACC,OAAP,CAAeO,EADd,CAAzB;MAGAT,YAAY,CAACH,QAAb,GAAwBc,gBAAxB;IACD;EAlBO;AALyB,CAAD,CAA7B;AA2BP,OAAO,MAAME,WAAW,GAAGnB,SAAS,CAACoB,OAA9B;AACP,OAAO,MAAM;EAAEf,WAAF;EAAeI,OAAf;EAAwBE,UAAxB;EAAoCK;AAApC,IACXhB,SAAS,CAACqB,OADL"},"metadata":{},"sourceType":"module"}