{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Note(props) {\n  _s();\n\n  const {\n    noteId\n  } = useParams();\n  const {\n    searchParams\n  } = useSearchParams();\n  const note = useSelector(store => store.NOTE.noteList.find(note => note.id === noteId));\n  console.log(noteId);\n  console.log(note);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: searchParams\n  }, void 0, false);\n}\n\n_s(Note, \"JmYWS2h3yxB8F2qyQVyPOtSeZzA=\", false, function () {\n  return [useParams, useSearchParams, useSelector];\n});\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["useSelector","useParams","useSearchParams","Note","props","noteId","searchParams","note","store","NOTE","noteList","find","id","console","log"],"sources":["/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/pages/Note/Note.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\n\nexport function Note(props) {\n  const { noteId } = useParams();\n  const { searchParams } = useSearchParams();\n  const note = useSelector((store) =>\n    store.NOTE.noteList.find((note) => note.id === noteId)\n  );\n  console.log(noteId);\n  console.log(note);\n  return <>{searchParams}</>;\n}\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,kBAA3C;;;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAC1B,MAAM;IAAEC;EAAF,IAAaJ,SAAS,EAA5B;EACA,MAAM;IAAEK;EAAF,IAAmBJ,eAAe,EAAxC;EACA,MAAMK,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IACvBA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,IAApB,CAA0BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYP,MAA/C,CADsB,CAAxB;EAGAQ,OAAO,CAACC,GAAR,CAAYT,MAAZ;EACAQ,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACA,oBAAO;IAAA,UAAGD;EAAH,iBAAP;AACD;;GATeH,I;UACKF,S,EACMC,e,EACZF,W;;;KAHCG,I"},"metadata":{},"sourceType":"module"}