{"ast":null,"code":"var _jsxFileName = \"/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/components/NoteForm/NoteForm.jsx\",\n    _s = $RefreshSig$();\n\nimport s from \"./style.module.css\";\nimport { PencilFill, TrashFill } from \"react-bootstrap-icons\";\nimport { ButtonPrimary } from \"components/ButtonPrimary/ButtonPrimary\";\nimport { useState } from \"react\";\nimport { ValidatorService } from \"services/form-validators\";\nimport { FieldError } from \"components/FieldError/FieldError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VALIDATORS = {\n  title: value => {\n    return ValidatorService.min(value, 3) || ValidatorService.max(value, 20);\n  },\n  content: value => {\n    return ValidatorService.min(value, 3);\n  }\n};\nexport function NoteForm(_ref) {\n  _s();\n\n  let {\n    isEditable = true,\n    title,\n    note,\n    onClickEdit,\n    onClickTrash,\n    onSubmit\n  } = _ref;\n  const [formValues, setFormValues] = useState({\n    title: note === null || note === void 0 ? void 0 : note.title,\n    content: note === null || note === void 0 ? void 0 : note.content\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: note !== null && note !== void 0 && note.title ? undefined : \"\",\n    content: note !== null && note !== void 0 && note.content ? undefined : \"\"\n  });\n\n  function hasError() {\n    return Object.values(formErrors).some(error => error !== undefined);\n  }\n\n  function updateFormValues(e) {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n    validate(e.target.name, e.target.value);\n  }\n\n  function validate(fieldName, fieldValue) {\n    setFormErrors({ ...formErrors,\n      [fieldName]: VALIDATORS[fieldName](fieldValue)\n    });\n  }\n\n  const actionIcons = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1\",\n      children: onClickEdit && /*#__PURE__*/_jsxDEV(PencilFill, {\n        onClick: onClickEdit,\n        className: s.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-1\",\n      children: onClickTrash && /*#__PURE__*/_jsxDEV(TrashFill, {\n        onClick: onClickTrash,\n        className: s.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const titleInput = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: updateFormValues,\n      type: \"text\",\n      name: \"title\",\n      className: \"form-control\",\n      value: formValues.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldError, {\n      msg: formErrors.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n\n  const contentInput = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: \"Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: updateFormValues,\n      type: \"text\",\n      name: \"content\",\n      className: \"form-control\",\n      row: \"5\",\n      value: formValues.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FieldError, {\n      msg: formErrors.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n\n  const submitButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.submit_btn,\n    children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      isDisabled: hasError(),\n      onClick: () => onSubmit(formValues),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), actionIcons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mb-3 ${s.title_input_container}`,\n      children: isEditable && titleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: isEditable ? contentInput : /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), onSubmit && submitButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteForm, \"tm6YAsYI9xYQ7yfd4OmqhmFHh7E=\");\n\n_c = NoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["s","PencilFill","TrashFill","ButtonPrimary","useState","ValidatorService","FieldError","VALIDATORS","title","value","min","max","content","NoteForm","isEditable","note","onClickEdit","onClickTrash","onSubmit","formValues","setFormValues","formErrors","setFormErrors","undefined","hasError","Object","values","some","error","updateFormValues","e","target","name","validate","fieldName","fieldValue","actionIcons","icon","titleInput","contentInput","submitButton","submit_btn","container","title_input_container"],"sources":["/Users/yanndelaqueze/code/react-course/project3-react-notes-manager/src/components/NoteForm/NoteForm.jsx"],"sourcesContent":["import s from \"./style.module.css\";\nimport { PencilFill, TrashFill } from \"react-bootstrap-icons\";\nimport { ButtonPrimary } from \"components/ButtonPrimary/ButtonPrimary\";\nimport { useState } from \"react\";\nimport { ValidatorService } from \"services/form-validators\";\nimport { FieldError } from \"components/FieldError/FieldError\";\nconst VALIDATORS = {\n  title: (value) => {\n    return ValidatorService.min(value, 3) || ValidatorService.max(value, 20);\n  },\n  content: (value) => {\n    return ValidatorService.min(value, 3);\n  },\n};\n\nexport function NoteForm({\n  isEditable = true,\n  title,\n  note,\n  onClickEdit,\n  onClickTrash,\n  onSubmit,\n}) {\n  const [formValues, setFormValues] = useState({\n    title: note?.title,\n    content: note?.content,\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: note?.title ? undefined : \"\",\n    content: note?.content ? undefined : \"\",\n  });\n\n  function hasError() {\n    return Object.values(formErrors).some((error) => error !== undefined);\n  }\n\n  function updateFormValues(e) {\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\n    validate(e.target.name, e.target.value);\n  }\n\n  function validate(fieldName, fieldValue) {\n    setFormErrors({\n      ...formErrors,\n      [fieldName]: VALIDATORS[fieldName](fieldValue),\n    });\n  }\n\n  const actionIcons = (\n    <>\n      <div className=\"col-1\">\n        {onClickEdit && <PencilFill onClick={onClickEdit} className={s.icon} />}\n      </div>\n      <div className=\"col-1\">\n        {onClickTrash && (\n          <TrashFill onClick={onClickTrash} className={s.icon} />\n        )}\n      </div>\n    </>\n  );\n\n  const titleInput = (\n    <div className=\"mb-5\">\n      <label className=\"form-label\">Title</label>\n      <input\n        onChange={updateFormValues}\n        type=\"text\"\n        name=\"title\"\n        className=\"form-control\"\n        value={formValues.title}\n      />\n      <FieldError msg={formErrors.title} />\n    </div>\n  );\n\n  const contentInput = (\n    <div className=\"mb-5\">\n      <label className=\"form-label\">Content</label>\n      <textarea\n        onChange={updateFormValues}\n        type=\"text\"\n        name=\"content\"\n        className=\"form-control\"\n        row=\"5\"\n        value={formValues.content}\n      />\n      <FieldError msg={formErrors.content} />\n    </div>\n  );\n\n  const submitButton = (\n    <div className={s.submit_btn}>\n      <ButtonPrimary\n        isDisabled={hasError()}\n        onClick={() => onSubmit(formValues)}\n      >\n        Submit\n      </ButtonPrimary>\n    </div>\n  );\n\n  return (\n    <form className={s.container}>\n      <div className=\"row justify-content-space-between\">\n        <div className=\"col-10\">\n          <h2 className=\"mb-3\">{title}</h2>\n        </div>\n        {actionIcons}\n      </div>\n      <div className={`mb-3 ${s.title_input_container}`}>\n        {isEditable && titleInput}\n      </div>\n      <div className=\"mb-3\">\n        {isEditable ? contentInput : <pre>{note.content}</pre>}\n      </div>\n      {onSubmit && submitButton}\n    </form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}